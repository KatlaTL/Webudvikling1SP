<div class="container">
    <div class="row">
        <div class="col-md-8 mb-3">
            <div class="box box-left border card text-white mb-3">
                <div class="card-header"> <h4><svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor" class="bi bi-lightbulb-fill" viewBox="0 0 16 16">
                    <path d="M2 6a6 6 0 1 1 10.174 4.31c-.203.196-.359.4-.453.619l-.762 1.769A.5.5 0 0 1 10.5 13h-5a.5.5 0 0 1-.46-.302l-.761-1.77a1.964 1.964 0 0 0-.453-.618A5.984 5.984 0 0 1 2 6m3 8.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1l-.224.447a1 1 0 0 1-.894.553H6.618a1 1 0 0 1-.894-.553L5.5 15a.5.5 0 0 1-.5-.5"/>
                  </svg> Feature Requests</h4></div>
                <div class="card-body bg-white">
                    <!-- Including the backCTA -->
                    <%- include("../partials/components/backCTA.ejs") %>
                      
                    <h4 class="card card-header">New feature request</h2>
                        <form id="createForm">
                            <div class="form-group">
                                <label for="category">Category</label>
                                <select class="form-control disable-if-logged-out" id="category" name="category" required>
                                    <option value="" disabled selected>Select a Category</option>
                                </select>
                            </div>

                            <div class="form-group">
                                <label for="title">Title</label>
                                <input type="text" class="form-control disable-if-logged-out" id="title" name="title"
                                    placeholder="Short descriptive title" maxlength="100" required>
                            </div>

                            <div class="form-group" id="request-textarea">
                                <label for="details">Details</label>
                                <textarea class="form-control disable-if-logged-out" id="details" name="details"
                                    placeholder="Any additional details..." maxlength="500" required></textarea>
                                <div class="character-counter">
                                    <span class="typed-characters">0</span>
                                    <span>/</span>
                                    <span class="maximum-characters">500</span>
                                </div>                               
                            </div>

                            <button id="btngreen" type="submit" class="btn disable-if-logged-out">Submit</button>
                            <% if (!locals.loginInfo) { %>
                                <!-- Including the loginLink -->
                                <%- include("../partials/components/loginLink.ejs", { action: "create a feature request"}) %>
                            <% } %>
                        </form>
                </div>
            </div>
        </div>
        <!-- Including the roadmap -->
        <%- include("../partials/roadmap.ejs") %>
    </div>
</div>

<script>
    //Fetch all categories and populate the category select
    fetchWrapper.get("/internal/categories")
        .then(data => {
            const selectList = document.querySelector(".form-control");
            for (let i = 0; i < data.categories.length; i++) {
                const category = data.categories[i].category; 
                const option = document.createElement("option");
                const textNode = document.createTextNode(category);

                option.appendChild(textNode);
                option.setAttribute("value", category);
                option.setAttribute("data-id", data.categories[i].id)
                selectList.appendChild(option);
            }
        })
        .catch(err => console.error(err));    
    
    //Add character count to details field
    const details = document.querySelector("#details");
    const detailsChars = document.querySelector(".typed-characters");
    countCharacters(details, (chars) => {
        detailsChars.textContent = chars;
    })

    //Add required class to elements with the required attribute to enable styling
    const submitBtn = document.querySelector("#btngreen");
    submitBtn.addEventListener("click", (e) => {
        addRequired("#createForm");
    })

    //Do a post request to create a new feature request
    const form = document.querySelector("#createForm");
    form.addEventListener("submit", (e) => {
        e.preventDefault();
        const { category, title, details} = e.target;

        fetchWrapper.post("/internal/feature-requests", {
            headers: {
                "Authorization": `Bearer ${JSON.parse(localStorage.getItem("user")).authorization}`,
                "Validation-Request-Type": "FeatureRequest"
            },
            body: {
                category: { 
                    id: parseInt(category.options[category.selectedIndex].dataset.id),
                    category: category.value
                },
                title: title.value,
                details: details.value
            }
        })
        .then(data => window.location.href = new URL(document.baseURI).origin)
        .catch(err => {
            try {
                const data = JSON.parse(err.message);
                insertMessage(data, "#createForm");
            } catch (err) {
                console.error(err);
            }
        });
    });
</script>